<Squish Friends>
<Maria Acuna>
<Daniel Ju>
<Pacy Yan>
pd 3
---------------------
Squishy Chess


------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
How to determine checkmate

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
One can use the slopes of lines to determine algorithms of the movement of the different pieces!

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================


2017-01-11
--------------------------------------------------------------
Maria:: came up with mathematical ways, through the slopes of lines, of depicting the movement of chess pieces within a 2D array. For example, the knight's destination and starting destinations must form a line with slope positive or negative 1/2 or 2, and for the bishop the slope must be positive or negative 1.
Daniel:: created the outlines of the class board and began planning out the instance variables and its methods and parameters. 
Pacy:: created the outlines of the classes: Bishop, King, Knight, Pawn, Player, Queen, Rook, Squishies and SquishyChess and began work on King and SquishyChess (began planning out the instance variables and its methods and parameters).
==============================================================
2017-01-12
--------------------------------------------------------------
Maria:: 
Daniel:: Created methods within Board.java that prints the board, initializes the pieces in their starting positions, and flips the board to the other player's perspective. 
Pacy:: 
==============================================================
2017-01-13-16 (weekend)
--------------------------------------------------------------
Maria:: 
Daniel:: Finished the move method. 
Pacy:: 
==============================================================
2017-01-17-16
--------------------------------------------------------------
Maria:: 
Daniel:: Finished the main method. The game can now go on until a player is checkmated. 
Pacy:: 
==============================================================
2017-01-18-16
--------------------------------------------------------------
Maria:: 
Daniel:: Finished move algorithms for pawn. Finished algorithm to check if the space a piece is moving to is occupied, and if so, if that piece is a friendly or enemy piece.
Pacy:: 
==============================================================
2017-01-19-16
--------------------------------------------------------------
Maria:: 
Daniel:: Finished algorithm for if a player makes an invalid move, they are forced to make a different choice of piece and where to move. 
Pacy:: 
==============================================================